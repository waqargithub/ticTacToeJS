<!DOCTYPE html >
<html lang="en" >
<head>
    <title>
      TicTacToe
    </title>    
    <meta charset="utf-8" />
    <meta name='viewport' content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no'>

 <!-- External style sheets. -->
 <link rel="stylesheet" href="ticTacToe.css" type="text/css" />
 <link rel="stylesheet" href="modal.css" type="text/css" /> 
 
 <script type="text/javascript" src="ticTacToe.js"></script>
	
	
	
	
</head>
<body>
 <div id="container">
  <div id="heading"><h1>Tis Time to Tic Tac Toe!</h1></div>
  
  <!--User selects one of three player modes: (1) two players using one client window on same machine,
    (2) one player playing computer on client machine, and (3) two players playing each other, each using
    a different client machine. -->
  
  <h2>Player Mode</h2>
<label class="radioContainer">
  <p><input type="radio" checked="checked" name="playerMode" id="2playersHere" onclick="setUp2PlayersHere();">
  Two players on this device</p>
  <span class="checkmark"></span>
</label>
<div id="playComputerDiv">
 <label class="radioContainer">
   <p><input type="radio" name="playerMode" id="playComputer" onchange="displayDifficultyLevelRange();">
   One player against computer</p>
   <span class="checkmark"></span>
 </label>
 <div id="difficultyLevelDiv" class="smallerFont">
   <div id="textDifficultyLevel" class="floatLeft">Difficulty Level: &nbsp;</div>
   <div class="floatLeft">
    <div id="textNovice" class="floatLeft">Novice</div>
    <div id="rangeDiv" class="floatLeft">
      <input type="range" id="difficultyLevelRange" class="slider"
             max="2" min="0" step="1" defaultValue="1">
    </div>
    <div id="textExpert" class="floatLeft">Expert</div>    
   </div>
   <div class="floatClear"></div>
 </div>
</div>
<label class="radioContainerFuture" disabled id="2playersSeparateDiv"> <!--For future use -->
  <p><input type="radio" name="playerMode" id="2playersSeparate" disabled>
  Two players on different machines (coming soon)</p>
  <span class="checkmark"></span>
</label>

  
  
  <!--When player clicks Play button, get player mode and open modal that displays tic tac toe grid -->  
  <p><button class="playButton" onclick="playerMode = getPlayerMode(); openModal();">Play!</button></p>
  <br><hr>
  <div>
   <!--Button to go back one window. This is useful when the game is reached via a link from another
     page (e.g. list of programming projects) -->
   <button class="button" id="backButton" onclick="window.history.back();">
     Go Back
   </button>
  </div>
  
  <!--Div that holds the modal used to display tic tac toe grid. Takes up entire window-->
  <div id="ticTacToeModal" class="modal">
   
   <!--Div that holds content for modal. May not take up entire window.-->
   <div class="modal-content">
    
    <!--Display the X you click to close the modal-->    
    <span class="close cursor" onclick="closeModal();">&times;</span>
 
    <!--Div that holds tic tac toe grid
    Grid is row0, row1, row2 with a horizontal line on each side of row1 -->
    <div id="grid">
     
     <!--Div that holds first row -->
     <div id="row0" class="row">
      
      <!--row0Win is a horizontal line that is superimposed (z-index=1) on row0 but
        not displayed unless a win occurs across row0. -->
      <div class="horizontalWin" id="row0Win"></div>
      
      <!--columnWin is a vertical line initially not displayed, made visible if a win occurs.
        Superimposed (z-index=1) across the winning column upon win across a column.
        Same line is used across all columns by setting CSS margin-left. -->
      <div class="verticalWin" id="columnWin"></div>
      
      <!--equivalent of row0Win for diagonal from square0 to square8-->
      <div id="downDiagonalWin"></div>
      <!--equivalent of row0Win for diagonal from square2 to square6-->
      <div id="upDiagonalWin"></div>
      <!--each row has square, vertical line, square, vertical line, square -->
      <div id="square0" class="square" onclick="updateGameStatus(0);"></div>
      <div class="verticalLine"></div>  
      <div id="square1" class="square" onclick="updateGameStatus(1);"></div>
      <div class="verticalLine"></div>   
      <div id="square2" class="square" onclick="updateGameStatus(2);"></div>
      <!--And then a horizontal line separates the rows-->
      <div class="horizontalLine"></div>
     </div>
     
     <!--same as row0 except column and diagonal wins are placed only in row0.
        row1 has row1win to be displayed when a win across row1-->
     <div id="row1" class="row">
      <div class="horizontalWin" id="row1Win"></div>
      <div id="square3" class="square" onclick="updateGameStatus(3);"></div>
      <div class="verticalLine"></div>
      <div id="square4" class="square" onclick="updateGameStatus(4);"></div>
      <div class="verticalLine"></div>		
      <div id="square5" class="square" onclick="updateGameStatus(5);"></div>		
      <div class="horizontalLine"></div>
     </div>
     
     
     <!--same as row0 except column and diagonal wins are placed only in row0.
        row2 has row2win to be displayed when a win across row2
        There is no horizontal line underneath row2 -->     
     <div id="row2" class="row">
      <div class="horizontalWin" id="row2Win"></div>
      <div id="square6" class="square" onclick="updateGameStatus(6);"></div>
      <div class="verticalLine"></div>		
      <div id="square7" class="square" onclick="updateGameStatus(7);"></div>
      <div class="verticalLine"></div>		
      <div id="square8" class="square" onclick="updateGameStatus(8);"></div>
      <div class="clear"></div>
     </div>
     <br>
     
     <!--Caption is used to display messages, status about the game -->
     <div class="caption" id="gameCaption"></div>
     
     <!--div that holds a table that shows the number of ties, and wins by X, O -->
     <div id="stats">
      <br>
      <table class="table" id="statsTable">
       <tr>
        <td>X Wins</td>
        <td>O Wins</td>
        <td>Ties</td>
       </tr>
       <tr>
        <td id="xWinsCell"></td>
        <td id="oWinsCell"></td>
        <td id="tiesCell"></td>
       </tr>
      </table>
      <br>
     </div>
     
     <!--button to play again. Resets grid to prepare for new game -->
     <div><button class="playButton" id="playAgainButton"
             onclick='reset(); if (playerMode == "playComputer") {setUpToPlayComputer();}'>
             Play Again
          </button>
     </div>
    </div>
 
 
    
   </div>
  </div>
 </div>
</body>
